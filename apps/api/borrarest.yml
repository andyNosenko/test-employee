openapi: 3.0.2
servers:
  - url: /borra.be
    description: the server
info:
  description: |-
    REST service for Borra backend development.
    Searches need to be cumulative and partial matches need to be included in the results (eg. search pnr= 876: so P-348762 and P-098765 are results)
    Searches are cumulative, so search on partial pnr and city should filter te list of results
  version: 1.0.1
  title: Borra
tags:
  - name: Dossiers
    description: Everything about the projects
paths:
  /dossiers:
    get:
      tags:
        - dossiers
      summary: (by user) Get a list of dossiers
      description: Returns list of dossiers. Filters are not case-sensitive. Partial hits on filters need to be included.
      operationId: getDossiers
      parameters:
        - name: pnr
          in: query
          description: part or entire pnr
          required: false
          schema:
            type: integer
            format: int64
        - name: unr
          in: query
          description: part or entire unr
          required: false
          schema:
            type: integer
            format: int64
        - name: zipcode
          in: query
          description: part or entire zipcode
          required: false
          schema:
            type: string
        - name: city
          in: query
          description: part or entire city name
          required: false
          schema:
            type: string
        - name: client_name
          in: query
          description: part or entire client name
          required: false
          schema:
            type: string
        - name: startdate
          in: query
          description: projects with borraLastUpdate equal to or later than startdate
          required: false
          schema:
            type: string
        - name: enddate
          in: query
          description: projects with borraLastUpdate equal to or sooner than enddate
          required: false
          schema:
            type: string
        - name: finished
          in: query
          description: projects with value in finished field
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DossierShort'
        '400':
          description:  Invalid request
        '404':
          description: Dossiers not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    
  /bouwsoftdossiers:  
    put: 
      tags:
        - bouwsoft
      summary: (by bouwsoftsync) puts a dossier in the system from Bouwsoft, or updates changed bouwsoft fields, based on  id of Bouwsoft.
      description: puts a single dossier in the database or updates dossier bouwsoft properties
      operationId: writeDossier
      requestBody:
        description: bouwsoft data from the dossier
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BouwsoftProject'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierShort'
        '201':
          description: dossier created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierShort'
        '400':
          description: Invalid request
        '404':
          description: Dossier not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
 
  /dossiers/{dossierUuid}:
    get:
      tags:
        - dossiers
      summary: (by user) Find dossier by uuid
      description: Returns a single dossier based on a uuid
      operationId: getDossierById
      parameters:
        - name: dossierUuid
          in: path
          description: ID of dossier to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierExtended'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dossier not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    patch: 
      tags:
        - dossiers
      summary: (by user) updates properties of dossier
      description: user updates changeable dossier properties.
        Updateable properties are finished, description, additional info
      operationId: updateDossier
      parameters:
        - name: dossierUuid
          in: path
          description: ID of dossier to return
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: changable data from the dossier
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DossierUserChangeable'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierExtended'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dossier not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    
  /documents:
    post:
      tags:
        - documents
      summary: (by user) uploads a document to a dossier
      description: uploads a document to a specific dossier. 
        Names of documents in that dossier can't be the same, so the name of the file you send is the requested name. 
        If the name already exists, return the definite name (eg. file (1), file (2), ...)
      operationId: uploadFile
      requestBody:
        description: send all the information of the file
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsExtended'
      responses:
        '201':
          description: successful upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsExtended'
        '400':
          description:  Invalid request
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    get:
      tags:
        - documents
      summary: (by user) Get a list of documents. Can be filtered by dossier and category
      description: Returns list of documents.
      operationId: getDocuments
      parameters:
        - name: dossierUuid
          in: query
          description: uuid of dossier
          required: false
          schema:
            type: string
            format: uuid
        - name: categoryId
          in: query
          description: category of the document
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentsShort'
        '400':
          description:  Invalid request
        '404':
          description: Dossiers not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

  /documents/{documentUuid}:
    get:
      tags:
        - documents
      summary: (by user) download a document by uuid
      description: Returns a single document based on a uuid
      operationId: getDocumentByUuid
      parameters:
        - name: documentUuid
          in: path
          description: uuid of document to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsExtended'
        '400':
          description: Invalid uuid supplied
        '404':
          description: Document not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    patch:
      tags:
        - documents
      summary: (by user) update properties of a document
      description: updates name and/or category of a document in that dossier
      operationId: updateFile
      parameters:
        - name: documentUuid
          in: path
          description: updates a file to in specific dossier
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: changeable data of the document is dossier, category, name and description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsUserChangeable'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsShort'
        '400':
          description: Invalid UUID supplied
        '404':
          description: Document not found
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    delete:
      tags:
        - documents
      summary: (by user) set "removed" property of a document to true
      description: set removed property of a document to true in that dossier
      operationId: deleteFile
      parameters:
        - name: documentUuid
          in: path
          description: updates a file to in specific dossier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: document deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid uuid supplied
        '404':
          description: Document not found
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

  /emails:
    get:
      tags:
        - emails
      summary: (by user) Get a list of emails
      description: Returns list of emails depending on the filter
      operationId: getEmails
      parameters:
        - name: dossierUuid
          in: query
          description: uuid of dossier
          required: false
          schema:
            type: string
            format: uuid
        - name: categoryId
          in: query
          description: category of the email
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailsShort'
        '400':
          description:  Invalid request
        '404':
          description: Dossiers not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    put:
      tags:
        - mailserver
      summary: (mailserver) uploads an email 
      description: uploads an email with blank in dossierUuid if no P-nr in subject. If there is a P-nr in the subject, assign uuid of dossier in the dossierUuid field.
        microsoftId needs to be checked. If it already exists, refuse action.
      operationId: uploadEmail 
      requestBody:
        description: send all the information of the email
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailsServer'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsExtended'
        '400':
          description: Invalid request
        '404':
          description: Email not found
        '405':
          description: Validation exception
        '422':
          description: Email already exists
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

  /emails/{emailUuid}:
    get:
      tags:
        - emails
      summary: (by user) get an email by uuid
      description: Returns a single email based on a uuid
      operationId: getEmailByUuid
      parameters:
        - name: emailUuid
          in: path
          description: uuid of document to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsExtended'
        '400':
          description: Invalid uuid supplied
        '404':
          description: Email not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    patch:
      tags:
        - emails
      summary: (by user) puts in category of specific dossier
      description: Assign category and dossier to email
      operationId: setEmail 
      parameters:
        - name: emailUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: changeable info of the email is dossier, category, name and description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailsUserChangeable'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsShort'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dossier not found
        '405':
          description: Validation exception
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    delete:
      tags:
        - emails
      summary: (by user) set "removed" property of an email to true
      description: set removed property of an email to true in that dossier
      operationId: updateEmail
      parameters:
        - name: emailUuid
          in: path
          description: uuid from that specific email
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: email deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid uuid supplied
        '404':
          description: Document not found
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

  /attachments:
    get:
      tags:
        - attachments
      summary: (by user) Get a list of attachments. Can be filtered by emailUuid and attachmentHash.
        This is a list without the actual filedata.
      description: Returns list of attachments.
      operationId: getAttachments
      parameters:
        - name: emailUuid
          in: query
          description: uuid of email
          required: false
          schema:
            type: string
            format: uuid
        - name: attachmentHash
          in: query
          description: unique identifier of the attachment
          required: false
          schema:
            type: string
            format: Sha256
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentsShort'
        '400':
          description:  Invalid request
        '404':
          description: attachments not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
  /attachments/{attachmentHash}:
    put:
      tags:
        - attachments
      summary: (by mailserver) internally saves the attachment on the server if it doesn't already exists
      description: if an attachment already exists, don't upload. If it does't exist, create new.
      operationId: setAttachment
      parameters:
        - name: attachmentHash
          description: unique identifier of an attachment. Sha256 hash of the file.
          in: path
          required: true
          schema:
            type: string
            format: Sha256
      requestBody:
        description: send all the information of the email
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentsExtended'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsExtended'
        '400':
          description: Invalid hash supplied
        '404':
          description: email not found
        '405':
          description: Validation exception
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'
    get:
      tags:
        - attachments
      summary: (by user) Get an attachment with a specific hash with filedata
      description: Returns a full attachment
      operationId: getAttachment
      parameters:
        - name: attachmentHash
          in: path
          description: hashcode of an attachment
          required: true
          schema:
            type: string
            format: Sha256
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsExtended'
        '400':
          description:  Invalid request
        '404':
          description: Attachment not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

  /categories:
    get:
      tags:
        - categories
      summary: (by user) Get a list of categories.
      description: Returns list of categories.
      operationId: getCategories
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description:  Invalid request
        '404':
          description: Categories not found
      security:
        - api_key: []
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

  /bouwsoftsync:
    post:
      tags:
        - bouwsoftsync
      summary: (by user) manual start of bouwsoftsync
      description: a user can manually start de sync to our system if there are urent updates.
      operationId: bouwsoftsync
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description:  Invalid request
        '408':
          description:  Request timeout
        '500':
          description:  Internal server error
      security:
        - borra_auth:
            - 'write:dossiers'
            - 'read:dossiers'

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    BouwsoftProject:
      x-swagger-router-model: be.blueblazer.borra.model.BouwsoftProject
      description:
        This is the entity like it comes from Bouwsoft. 
        Only bouwsoft properties are included. 
        Note that when the project is imported in our system and it doesn't already exist, a new project is created in our system, and some fields must be set by default.
        Finished must then be set to false.
        dossierUuid must be added.
      required:
        - projectId
        - pnr
      properties:
        projectId:
          description: (bouwsoft) unique identifier of project
          type: integer
          format: int64
          example: 10
        pnr:
          description: (bouwsoft) unique identifier of project
          type: integer
          format: int64
          example: 202200314
        unr:
          description: (bouwsoft) unique identifier of exectution of project
          type: integer
          format: int64
          example: 20220123
        name:
          description: (bouwsoft) title of dossier
          type: string
          example: Hospital
        yourreference:
          description: (bouwsoft) reference from Bouwsoft
          type: string
          example: brickwork on north side
        list:
          description: (Bouwsoft) a Bouwsoft list
          type: string
          example: list
        group:
          description: (Bouwsoft) 
          type: string
          example: group
        address: 
          description: (Bouwsoft)
          type: string
          example: Kerkstraat 123
        addressline2:
          description: (Bouwsoft)
          type: string
          example: block 2
        telephone:
          description: (Bouwsoft)
          type: string
          example: +32 3 456 78 90
        gsm:
          description: (Bouwsoft)
          type: string
          example: +32 456 78 90 12
        countrycode:
          description: (Bouwsoft)
          type: string
          example: BE
        zipcode:
          description: (Bouwsoft)
          type: string
          example: 8200
        city:
          description: (Bouwsoft)
          type: string
          example: Oostkamp
        state:
          description: (Bouwsoft)
          type: string
          example: state
        distance: 
          description: (Bouwsoft)
          type: integer
          format: int32
          example: 32
        clientAddressid: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 20
        clientName:
          description: (Bouwsoft)
          type: string
          example: fehguy
        clientTelephone:
          description: (Bouwsoft)
          type: string
          example: +32 50 56 67 78
        clientGsm:
          description: (Bouwsoft)
          type: string
          example: +32 456 67 78 89
        clientEmail:
          description: (Bouwsoft)
          type: string
          example: fehguy@example.be
        dateCreated: 
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateApproved: 
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateRejected:
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateCompleted:
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        ordernr:
          description: (Bouwsoft)
          type: string
          example: O-56780
        contractamount: 
          description: (Bouwsoft)
          type: number
          minimum: 0
          format: double
          example: 56789.90
        iscostplusproject: 
          description: (Bouwsoft)
          type: boolean
          example: true
        isrealestateproject:
          description: (Bouwsoft)
          type: boolean
          example: true
        hasactualcosts: 
          description: (Bouwsoft)
          type: boolean
          example: true
        archivenr: 
          description: (Bouwsoft)
          type: string
          example: archivenr
        cadasterDepartment: 
          description: (Bouwsoft)
          type: string
          example: cadasterdepartement
        cadasterSection: 
          description: (Bouwsoft)
          type: string
          example: C54
        cadasterNr:
          description: (Bouwsoft)
          type: string
          example: cadasternr
        beGewestplan: 
          description: (Bouwsoft)
          type: string
          example: gewestplan
        beWerkplaatsnr30bis: 
          description: (Bouwsoft)
          type: string
          example: werkplaatsnr
        beBpa: 
          description: (Bouwsoft)
          type: string
          example: bpa
        beRup: 
          description: (Bouwsoft)
          type: string
          example: rup
        lotNr:
          description: (Bouwsoft)
          type: string
          example: lotnr
        companyId: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 30
        companyName: 
          description: (Bouwsoft)
          type: string
          example: MyCompany
        executiontime: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 30
        approved: 
          description: (Bouwsoft)
          type: boolean
          example: true
        rejected: 
          description: (Bouwsoft)
          type: boolean
          example: true
        completed: 
          description: (Bouwsoft)
          type: boolean
          example: true
        parentId: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 40
        currentphaseId: 
          description: (Bouwsoft)
          type: integer
          format: int32
          example: 3
        currentphaseTitle: 
          description: (Bouwsoft)
          type: string
          example: in progress
        tsLastupdate: 
          description: (Bouwsoft)
          type: string
          example: lastupdate
        contacts:
          description: (bouwsoft) people linked to this dossier 
          type: array
          items:
            $ref: '#/components/schemas/Contacts'
      type: object
    DossierExtended:
      x-swagger-router-model: be.blueblazer.borra.model.DossierExtended
      description: Is the same as DossierShort, but WITH emails and documents. 
        Take notice some fields are coming from Bouwsoftsync, some are new fields to be managed by users.
        Emails can be added by mailserver and managed by users.
      required:
        - dossierUuid
        - projectId
        - pnr
      properties:
        dossierUuid:
          description: (our system generated) unique identifier of dossier
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        projectId:
          description: (bouwsoft) unique identifier of project
          type: integer
          format: int64
          example: 10
        pnr:
          description: (bouwsoft) unique identifier of project
          type: integer
          format: int64
          example: 202200314
        unr:
          description: (bouwsoft) unique identifier of exectution of project
          type: integer
          format: int64
          example: 20220123
        name:
          description: (bouwsoft) title of dossier
          type: string
          example: Hospital
        yourreference:
          description: (bouwsoft) reference from Bouwsoft
          type: string
          example: brickwork on north side
        list:
          description: (Bouwsoft) a Bouwsoft list
          type: string
          example: list
        group:
          description: (Bouwsoft) 
          type: string
          example: group
        address: 
          description: (Bouwsoft)
          type: string
          example: Kerkstraat 123
        addressline2:
          description: (Bouwsoft)
          type: string
          example: block 2
        telephone:
          description: (Bouwsoft)
          type: string
          example: +32 3 456 78 90
        gsm:
          description: (Bouwsoft)
          type: string
          example: +32 456 78 90 12
        countrycode:
          description: (Bouwsoft)
          type: string
          example: BE
        zipcode:
          description: (Bouwsoft)
          type: string
          example: 8200
        city:
          description: (Bouwsoft)
          type: string
          example: Oostkamp
        state:
          description: (Bouwsoft)
          type: string
          example: state
        distance: 
          description: (Bouwsoft)
          type: integer
          format: int32
          example: 32
        clientAddressid: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 20
        clientName:
          description: (Bouwsoft)
          type: string
          example: fehguy
        clientTelephone:
          description: (Bouwsoft)
          type: string
          example: +32 50 56 67 78
        clientGsm:
          description: (Bouwsoft)
          type: string
          example: +32 456 67 78 89
        clientEmail:
          description: (Bouwsoft)
          type: string
          example: fehguy@example.be
        dateCreated: 
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateApproved: 
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateRejected:
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateCompleted:
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        ordernr:
          description: (Bouwsoft)
          type: string
          example: O-56780
        contractamount: 
          description: (Bouwsoft)
          type: number
          minimum: 0
          format: double
          example: 56789.90
        iscostplusproject: 
          description: (Bouwsoft)
          type: boolean
          example: true
        isrealestateproject:
          description: (Bouwsoft)
          type: boolean
          example: true
        hasactualcosts: 
          description: (Bouwsoft)
          type: boolean
          example: true
        archivenr: 
          description: (Bouwsoft)
          type: string
          example: archivenr
        cadasterDepartment: 
          description: (Bouwsoft)
          type: string
          example: cadasterdepartement
        cadasterSection: 
          description: (Bouwsoft)
          type: string
          example: C54
        cadasterNr:
          description: (Bouwsoft)
          type: string
          example: cadasternr
        beGewestplan: 
          description: (Bouwsoft)
          type: string
          example: gewestplan
        beWerkplaatsnr30bis: 
          description: (Bouwsoft)
          type: string
          example: werkplaatsnr
        beBpa: 
          description: (Bouwsoft)
          type: string
          example: bpa
        beRup: 
          description: (Bouwsoft)
          type: string
          example: rup
        lotNr:
          description: (Bouwsoft)
          type: string
          example: lotnr
        companyId: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 30
        companyName: 
          description: (Bouwsoft)
          type: string
          example: MyCompany
        executiontime: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 30
        approved: 
          description: (Bouwsoft)
          type: boolean
          example: true
        rejected: 
          description: (Bouwsoft)
          type: boolean
          example: true
        completed: 
          description: (Bouwsoft)
          type: boolean
          example: true
        parentId: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 40
        currentphaseId: 
          description: (Bouwsoft)
          type: integer
          format: int32
          example: 3
        currentphaseTitle: 
          description: (Bouwsoft)
          type: string
          example: in progress
        finished:
          description: (Our system) User can change finished state
          type: boolean
          example: false
        tsLastupdate: 
          description: (Bouwsoft)
          type: string
          example: lastupdate
        borraLastUpdate:
          description: (our system) datetimestamp with the last update of information
          type: string
          example: 13/04/2022 - 11:15
        description:
          description: (our system) User can add or change description
          type: string
          example: free information over mulitple lines 1
        additionalInfo:
          description: (our system) User can add or change extra info
          type: string
          example: free information over mulitple lines 2
        documents:
          description: (our system) User can add documents and change some properties
          type: array
          items:
            $ref: '#/components/schemas/DocumentsShort'
        emails:
          description: 
            (mailserver and our system) Mailserver can add emails and 
            User can change some properties of emails
          type: array
          items:
            $ref: '#/components/schemas/EmailsExtended'
        contacts:
          description: (bouwsoft) people linked to this dossier 
          type: array
          items:
            $ref: '#/components/schemas/Contacts'
      type: object
    DossierUserChangeable:
      x-swagger-router-model: be.blueblazer.borra.model.DossierUserChangeable
      description: Datamodel of fields that are changeable by the user
        finished, description and additional info.
      properties:
        dossierUuid:
          description: (our system generated) unique identifier of dossier
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        finished:
          description: (Our system) User can change finished state
          type: boolean
          example: false
        borraLastUpdate:
          description: (our system) datetimestamp with the last update of information
          type: string
          example: 13/04/2022 - 11:15
        description:
          description: (our system) User can add or change description
          type: string
          example: free information over mulitple lines 1
        additionalInfo:
          description: (our system) User can add or change extra info
          type: string
          example: free information over mulitple lines 2
      type: object
    DossierShort:
      x-swagger-router-model: be.blueblazer.borra.model.DossierShort
      description: Is the same as DossierExtended but without the emails and documents
      required:
        - dossierUuid
        - projectId
        - pnr
      properties:
        dossierUuid:
          description: (our system generated) unique identifier of dossier
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        id:
          description: (bouwsoft) unique identifier of project
          type: integer
          format: int64
          example: 10
        pnr:
          description: (bouwsoft) unique identifier of project
          type: integer
          format: int64
          example: 202200314
        unr:
          description: (bouwsoft) unique identifier of exectution of project
          type: integer
          format: int64
          example: 20220123
        name:
          description: (bouwsoft) title of dossier
          type: string
          example: Hospital
        yourreference:
          description: (bouwsoft) reference from Bouwsoft
          type: string
          example: brickwork on north side
        list:
          description: (Bouwsoft) a Bouwsoft list
          type: string
          example: list
        group:
          description: (Bouwsoft) 
          type: string
          example: group
        address: 
          description: (Bouwsoft)
          type: string
          example: Kerkstraat 123
        addressline2:
          description: (Bouwsoft)
          type: string
          example: block 2
        telephone:
          description: (Bouwsoft)
          type: string
          example: +32 3 456 78 90
        gsm:
          description: (Bouwsoft)
          type: string
          example: +32 456 78 90 12
        countrycode:
          description: (Bouwsoft)
          type: string
          example: BE
        zipcode:
          description: (Bouwsoft)
          type: string
          example: 8200
        city:
          description: (Bouwsoft)
          type: string
          example: Oostkamp
        state:
          description: (Bouwsoft)
          type: string
          example: state
        distance: 
          description: (Bouwsoft)
          type: integer
          format: int32
          example: 32
        clientAddressid: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 20
        clientName:
          description: (Bouwsoft)
          type: string
          example: fehguy
        clientTelephone:
          description: (Bouwsoft)
          type: string
          example: +32 50 56 67 78
        clientGsm:
          description: (Bouwsoft)
          type: string
          example: +32 456 67 78 89
        clientEmail:
          description: (Bouwsoft)
          type: string
          example: fehguy@example.be
        dateCreated: 
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateApproved: 
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateRejected:
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        dateCompleted:
          description: (Bouwsoft)
          type: string
          example: 12/03/2021
        ordernr:
          description: (Bouwsoft)
          type: string
          example: O-56780
        contractamount: 
          description: (Bouwsoft)
          type: number
          minimum: 0
          format: double
          example: 56789.90
        iscostplusproject: 
          description: (Bouwsoft)
          type: boolean
          example: true
        isrealestateproject:
          description: (Bouwsoft)
          type: boolean
          example: true
        hasactualcosts: 
          description: (Bouwsoft)
          type: boolean
          example: true
        archivenr: 
          description: (Bouwsoft)
          type: string
          example: archivenr
        cadasterDepartment: 
          description: (Bouwsoft)
          type: string
          example: cadasterdepartement
        cadasterSection: 
          description: (Bouwsoft)
          type: string
          example: C54
        cadasterNr:
          description: (Bouwsoft)
          type: string
          example: cadasternr
        beGewestplan: 
          description: (Bouwsoft)
          type: string
          example: gewestplan
        beWerkplaatsnr30bis: 
          description: (Bouwsoft)
          type: string
          example: werkplaatsnr
        beBpa: 
          description: (Bouwsoft)
          type: string
          example: bpa
        beRup: 
          description: (Bouwsoft)
          type: string
          example: rup
        lotNr:
          description: (Bouwsoft)
          type: string
          example: lotnr
        companyId: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 30
        companyName: 
          description: (Bouwsoft)
          type: string
          example: MyCompany
        executiontime: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 30
        approved: 
          description: (Bouwsoft)
          type: boolean
          example: true
        rejected: 
          description: (Bouwsoft)
          type: boolean
          example: true
        completed: 
          description: (Bouwsoft)
          type: boolean
          example: true
        parentId: 
          description: (Bouwsoft)
          type: integer
          format: int64
          example: 40
        currentphaseId: 
          description: (Bouwsoft)
          type: integer
          format: int32
          example: 3
        currentphaseTitle: 
          description: (Bouwsoft)
          type: string
          example: in progress
        finished:
          description: (Our system) User can change finished state
          type: boolean
          example: false
        tsLastupdate: 
          description: (Bouwsoft)
          type: string
          example: lastupdate
        borraLastUpdate:
          description: (our system) datetimestamp with the last update of information
          type: string
          example: 13/04/2022 - 11:15
        description:
          description: (our system) User can add or change description
          type: string
          example: free information over mulitple lines 1
        additionalInfo:
          description: (our system) User can add or change extra info
          type: string
          example: free information over mulitple lines 2
        contacts:
          description: (bouwsoft) people linked to this dossier 
          type: array
          items:
            $ref: '#/components/schemas/Contacts'
      type: object
    Contacts:
      description: (from bouwsoft) contacts linked to a dossier from GET ProjectContacts
      x-swagger-router-model: be.blueblazer.borra.model.Contacts
      required:
        - contactId
        - contactName
      properties:
        id:
          description: (bouwsoft) unique identifier of contact
          type: integer
          format: int64
          example: 10
        ProjectId:
          description: (bouwsoft) unique identifier of dossier
          type: integer
          format: int64
          example: 10
        projectApproved:
          description: (bouwsoft) wether the project is approved
          type: boolean
          example: true
        projectRejected:
          description: (bouwsoft) wether the project is rejected
          type: boolean
          example: false
        projectCompleted:
          description: (bouwsoft) wether the project in bouwsoft in completed
          type: boolean
          example: false
        addressId:
          description: (bouwsoft) address_id
          type: integer
          format: int64
          example: 10
        addressName:
          description: (bouwsoft) name of the address address_name
          type: string
          example: School
        addressActive:
          description: (bouwsoft) wether the addrwss is active
          type: boolean
          example: true
        contactId: 
          description: (bouwsoft) the id of bouwsoft contactlist contact_id
          type: integer
          format: int32
          example: 4
        contactSalutation:
          description: (bouwsoft) how to address the contact contact_salutation
          type: string
          example: sir
        contactName:
          description: (bouwsoft) name of the contact
          type: string
          example: Timothy Simmons
        contactFunction:
          description: (bouwsoft) function of the contact
          type: string
          example: Project Leader
        contactDepartement:
          description: (bouwsoft) departement of the contact
          type: string
          example: calculation
        contactAddress:
          description: (bouwsoft) street line 1 of the contact address
          type: string
          example: Schoolstraat 23
        contactAddressLine2:
          description: (bouwsoft) street line 2 of the contact address
          type: string
          example: block D
        contactCountrycode:
          description: (bouwsoft) country code of the contact
          type: string
          example: BE 
        contactZipcode:
          description: (bouwsoft) zipcode of the contact
          type: string
          example: '8000'
        contactCity:
          description: (bouwsoft) city of the contact
          type: string
          example: Bruges
        contactState:
          description: (bouwsoft) State of the contact
          type: string
          example: West-Vlaanderen
        contactEmail:
          description: (bouwsoft) email of contact
          type: string
          example: employee@borra.be
        contactTelephone: 
          description: (bouwsoft) telephone of contact
          type: string
          example: +32 3 456 78 90
        contactFax:
          description: (bouwsoft) fax of contact
          type: string
          example: +32 3 456 78 90
        contactGsm:
          description: (bouwsoft) mobile number of contact
          type: string
          example: +32 486 11 22 33
      type: object
    DocumentsExtended:
      description: 
        Is the same as DocumentsShort, but WITH filedata. These are files to be managed, like plans in pdf, photos, letters, other sheet etc... 
        They can be uploaded by the user, some properties can be changed by the user. 
        Docments can alse be found as attachment in emails in the system (see be.blueblazer.borra.model.EmailsExtended)
      x-swagger-router-model: be.blueblazer.borra.model.Documents
      required:
        - documentUuid
        - name
        - extension
        - datetimeCreated
        - datetimeChanged
        - filesizeinbytes
        - filedata
      properties:
        documentUuid:
          description: (our system generated)
          type: string
          format: uuid
          example: 4999815c-dcd4-4042-afaa-dfbe606d847d
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        categoryId:
          description: changable by user
          type: integer
          format: int32
          example: 4
        name: 
          description: changable by user
          type: string
          example: frontroom
        extension: 
          type: string
          example: pdf
        datetimeCreated:
          type: string
          example: 23/03/2021 - 15:12
        datetimeChanged:
          type: string
          example: 23/03/2021 - 15:12
        filesizeinbytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
        description:
          description: changable by user
          type: string
          example: extra info about the document
        filedata:
          type: string
          format: binary
        isDeleted:
          type: boolean
          example: false
      type: object
    DocumentsUserChangeable:
      description: 
        Is the same as DocumentsExtended, but WITHOUT filedata. These are files to be managed, like plans in pdf, photos, letters, other sheet etc... 
        They can be uploaded by the user, some properties can be changed by the user. 
        Docments can alse be found as attachment in emails in the system (see be.blueblazer.borra.model.EmailsExtended)
      x-swagger-router-model: be.blueblazer.borra.model.Documents
      required:
        - documentUuid
        - name
      properties:
        documentUuid:
          description: (our system generated so not changeable)
          type: string
          format: uuid
          example: 4999815c-dcd4-4042-afaa-dfbe606d847d
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        categoryId:
          description: changable by user
          type: integer
          format: int32
          example: 4
        name: 
          description: changable by user
          type: string
          example: frontroom
        description:
          description: changable by user
          type: string
          example: extra info about the document
      type: object
    DocumentsShort:
      description: 
        Is the same as DocumentsExtended, but WITHOUT filedata. These are files to be managed, like plans in pdf, photos, letters, other sheet etc... 
        They can be uploaded by the user, some properties can be changed by the user. 
        Docments can alse be found as attachment in emails in the system (see be.blueblazer.borra.model.EmailsExtended)
      x-swagger-router-model: be.blueblazer.borra.model.Documents
      required:
        - documentUuid
        - name
        - extension
        - datetimeCreated
        - datetimeChanged
        - filesizeinbytes
      properties:
        documentUuid:
          description: (our system generated)
          type: string
          format: uuid
          example: 4999815c-dcd4-4042-afaa-dfbe606d847d
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        categoryId:
          description: changable by user
          type: integer
          format: int32
          example: 4
        name: 
          description: changable by user
          type: string
          example: frontroom
        extension: 
          type: string
          example: pdf
        datetimeCreated:
          type: string
          example: 23/03/2021 - 15:12
        datetimeChanged:
          type: string
          example: 23/03/2021 - 15:12
        filesizeinbytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
        description:
          description: changable by user
          type: string
          example: extra info about the document
      type: object
    EmailsExtended:
      x-swagger-router-model: be.blueblazer.borra.model.EmailsExtended
      required:
        - emailUuid
        - microsoftId
        - datetimeSent
        - mailsizeInBytes
        - fromSender
        - toRecepient
        - attachmentsPresent
      properties:
        emailUuid:
          type: string
          format: uuid
          example: cd6ca715-b174-4657-bafc-972c15e1727d
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        microsoftId:
          type: string
          example: 861f525a-284c-4e44-a92a-2af3e2d8919b
        categoryId:
          type: integer
          format: int32
          example: 4
          default: 0
        datetimeSent:
          type: string
          example: 23/03/2021 - 13:45
        mailsizeInBytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
        title:
          type: string
          example: Some extra info about our stairs
        fromSender:
          type: string
          example: fehguy@home.be
        toRecepient:
          type: string
          example: aguy@borra.be
        ccRecepientCopy:
          type: string
          example: another@borra.be; mehgirl@home.be
        bccRecepientBlindcopy:
          type: string
          example: another@borra.be; mehgirl@home.be
        body:
          type: string
          example: ipsum lorem dolor sit amet
        attachmentsPresent:
          type: boolean
          example: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentsExtended'
      type: object
    EmailsServer:
      x-swagger-router-model: be.blueblazer.borra.model.EmailsServer
      required:
        - microsoftId
        - datetimeSent
        - mailsizeInBytes
        - fromSender
        - toRecepient
        - attachmentsPresent
      properties:
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        microsoftId:
          type: string
          example: 861f525a-284c-4e44-a92a-2af3e2d8919b
        categoryId:
          type: integer
          format: int32
          example: 4
          default: 0
        datetimeSent:
          type: string
          example: 23/03/2021 - 13:45
        mailsizeInBytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
        title:
          type: string
          example: Some extra info about our stairs
        fromSender:
          type: string
          example: fehguy@home.be
        toRecepient:
          type: string
          example: aguy@borra.be
        ccRecepientCopy:
          type: string
          example: another@borra.be; mehgirl@home.be
        bccRecepientBlindcopy:
          type: string
          example: another@borra.be; mehgirl@home.be
        body:
          type: string
          example: ipsum lorem dolor sit amet
        attachmentsPresent:
          type: boolean
          example: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentsExtended'
      type: object
    EmailsUserChangeable:
      x-swagger-router-model: be.blueblazer.borra.model.EmailsShort
      required:
        - emailUuid     
      properties:
        emailUuid:
          description: Is not user changable, but is the identifier
          type: string
          format: uuid
          example: cd6ca715-b174-4657-bafc-972c15e1727d
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        categoryId:
          type: integer
          format: int32
          example: 4
          default: 0
      type: object
    EmailsShort:
      x-swagger-router-model: be.blueblazer.borra.model.EmailsShort
      required:
        - emailUuid
        - microsoftId
        - datetimeSent
        - mailsizeInBytes
        - fromSender
        - toRecepient
        - attachmentsPresent
      properties:
        emailUuid:
          type: string
          format: uuid
          example: cd6ca715-b174-4657-bafc-972c15e1727d
        dossierUuid:
          type: string
          format: uuid
          example: 105ba459-e43b-4719-a8b8-5bdf6fd93baf
        microsoftId:
          type: string
          example: 861f525a-284c-4e44-a92a-2af3e2d8919b
        categoryId:
          type: integer
          format: int32
          example: 4
          default: 0
        datetimeSent:
          type: string
          example: 23/03/2021 - 13:45
        mailsizeInBytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
        title:
          type: string
          example: Some extra info about our stairs
        fromSender:
          type: string
          example: fehguy@home.be
        toRecepient:
          type: string
          example: aguy@borra.be
        ccRecepientCopy:
          type: string
          example: another@borra.be; mehgirl@home.be
        bccRecepientBlindcopy:
          type: string
          example: another@borra.be; mehgirl@home.be
        body:
          type: string
          example: ipsum lorem dolor sit amet
        attachmentsPresent:
          type: boolean
          example: false
      type: object
    AttachmentsExtended:
      x-swagger-router-model: be.blueblazer.borra.model.AttachmentsExtended
      description: Same as attachmentsShort but with filedata. Attachment of emails
      required:
        - attachmentHash
        - name
        - extension
        - datetimeCreated
        - datetimeChanged
        - filesizeinbytes
        - filedata
      properties:
        attachmentHash:
          description: (our system generated) unique identifier of dossier
          type: string
          format: Sha256
          minLength: 64
          maxLength: 64
          example: 339cb2f92ab869ced44c3fcea7be33de859f50e0c2e543201f5260b01b465165
        name: 
          description: changable by user
          type: string
          example: PlanB
        extension: 
          type: string
          example: pdf
        datetimeCreated:
          type: string
          example: 23/03/2021 - 15:12
        datetimeChanged:
          type: string
          example: 23/03/2021 - 15:12
        filesizeinbytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
        filedata:
          type: string
          format: binary
      type: object
    AttachmentsShort:
      x-swagger-router-model: be.blueblazer.borra.model.AttachmentsShort
      description: Same as attachmentsExtended but without filedata. Attachment of emails
      required:
        - attachmentHash
        - name
        - extension
        - datetimeCreated
        - datetimeChanged
        - filesizeinbytes
      properties:
        attachmentHash:
          description: (our system generated) unique identifier of dossier
          type: string
          format: Sha256
          minLength: 64
          maxLength: 64
          example: 339cb2f92ab869ced44c3fcea7be33de859f50e0c2e543201f5260b01b465165
        name: 
          description: changable by user
          type: string
          example: PlanB
        extension: 
          type: string
          example: pdf
        datetimeCreated:
          type: string
          example: 23/03/2021 - 15:12
        datetimeChanged:
          type: string
          example: 23/03/2021 - 15:12
        filesizeinbytes:
          type: integer
          format: int64
          minimum: 0
          example: 4086565
      type: object
    Category:
      x-swagger-router-model: be.blueblazer.borra.model.Category
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Original plans
      type: object
    Finished:
      x-swagger-router-model: be.blueblazer.borra.model.Finished
      required:
        - status
      properties:
        status: 
          type: boolean
    Tag:
      x-swagger-router-model: be.blueblazer.borra.model.Tag
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      type: object
    ApiResponse:
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      type: object
  requestBodies:
    Dossier:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DossierExtended'
      description: Dossier object that needs to be added to the application
  securitySchemes:
    borra_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://petstore.swagger.io/oauth/authorize'
          scopes:
            'write:dossiers': modify dossiers in your account
            'read:dossiers': read your dossiers
    api_key:
      type: apiKey
      name: api_key
      in: header
